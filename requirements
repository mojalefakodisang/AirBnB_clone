#!/usr/bin/env bash

NC='\033[0m'
RED='\033[0;31m'
GREEN='\033[0;32m'
files=$(find . -type f -name "*.py" ! -name "__init__.py")

echo -e "${RED}Requirements Checker${NC}\n"

read_me_file() {
    file=$(find . -maxdepth 1 -name "README.md")

    echo -e "${RED}README.md${NC}"

    if [ -z "$file" ]
    then
        echo -e "README.md: ${RED}NOT FOUND${NC}"
    else
        echo -e "README.md: ${GREEN}FOUND${NC}"
    fi
    echo -e "\n"
}

Pycodestyle() {
    echo -e "${RED}Pycodestyle Checker${NC}"
    for file in $files;
    do
        output=$(pycodestyle "$file")
        if [ $? -ne 0 ];
        then
            echo -e "$output"
            echo -e "\t${RED}Failed${NC}"
        else
            echo -e "$file" | tr -d '\n'
            echo -e "\t${GREEN}OK${NC}"
        fi
    done
    echo -e "\n"
}

Check_interpreter() {
    interpreter="#!/usr/bin/python3"
    echo -e "${RED}Interpreter Checker${NC}"

    for file in $files
    do
        check=$(cat < "$file" | head -1)
        echo -e "$file" | tr -d '\n'
        if [ "$check" == "$interpreter" ]
        then
            echo -e "\t${GREEN}OK${NC}"
        else
            echo -e "$( cat < "$file" | head -1 )"
            echo -e "\t${RED}Failed${NC}"
        fi
    done
    echo -e "\n"
}

File_executable() {
    echo -e "${RED}File executable Checker${NC}"
    for file in $files
    do
        file_to_check="$file"
        echo -e "$file" | tr -d '\n'
        if [ -x "$file_to_check" ]
        then
            echo -e "\t${GREEN}OK${NC}"
        else
            chmod +x "$file"
            echo -e "\t${RED}Failed${NC}"
        fi
    done
    echo -e "\n"
}

argument="$1"
if [ "$argument" == "executable" ]
then
    File_executable
elif [ "$argument" == "pycodestyle" ]
then
    Pycodestyle
elif [ "$argument" == "interpreter" ]
then
    Check_interpreter
elif [ "$argument" == "all" ]
then
    Check_interpreter
    Pycodestyle
    File_executable
else
    echo "Usage: ./requirement <all> | <executable> | <pycodestyle> | <interpreter>"
fi
